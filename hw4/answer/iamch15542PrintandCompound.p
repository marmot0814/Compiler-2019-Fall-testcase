1: //&T-
2: iamch15542PrintandCompound;
3:
4: // global declartion
5: var a : integer;
6: var b : string;
7:
8: func( a, b : integer; c : string ) : integer;   // a, b is ok
9: begin
10:     var a : boolean; // wrong, same as param
11:     begin
12:         var a : string; // is ok
13:         a := b; // will use param b, so it is wrong
14:         for idx := 1 to 1150 do
15:             b := idx; // param can be reference
16:         end do
17:     end
18: end
19: end func
20:
21: begin
22:     var first : integer;
23:     begin
24:         var sec : integer;
25:
26:         sec := first; // ok, can not use
27:         sec := a; // can use global
28:
29:     end
30: end
31: end iamch15542PrintandCompound
==============================================================================================================
Name                             Kind       Level      Type             Attribute
--------------------------------------------------------------------------------------------------------------
idx                              loop_var   3(local)   integer
--------------------------------------------------------------------------------------------------------------
==============================================================================================================
Name                             Kind       Level      Type             Attribute
--------------------------------------------------------------------------------------------------------------
a                                variable   2(local)   string
--------------------------------------------------------------------------------------------------------------
==============================================================================================================
Name                             Kind       Level      Type             Attribute
--------------------------------------------------------------------------------------------------------------
a                                parameter  1(local)   integer
b                                parameter  1(local)   integer
c                                parameter  1(local)   string
--------------------------------------------------------------------------------------------------------------
==============================================================================================================
Name                             Kind       Level      Type             Attribute
--------------------------------------------------------------------------------------------------------------
sec                              variable   2(local)   integer
--------------------------------------------------------------------------------------------------------------
==============================================================================================================
Name                             Kind       Level      Type             Attribute
--------------------------------------------------------------------------------------------------------------
first                            variable   1(local)   integer
--------------------------------------------------------------------------------------------------------------
==============================================================================================================
Name                             Kind       Level      Type             Attribute
--------------------------------------------------------------------------------------------------------------
iamch15542PrintandCompound       program    0(global)  void
a                                variable   0(global)  integer
b                                variable   0(global)  string
func                             function   0(global)  integer          integer, integer, string
--------------------------------------------------------------------------------------------------------------
<Error> Found in line 10, column 9: symbol 'a' is redeclared
        var a : boolean; // wrong, same as param
            ^
<Error> Found in line 13, column 14: assigning to 'string' from incompatible type 'integer'
            a := b; // will use param b, so it is wrong
                 ^
